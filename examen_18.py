# -*- coding: utf-8 -*-
"""EXAMEN.18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10soc702PV5V4_wv9UKr6UQPAgzh3j9vR
"""

import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf

# Datos de series temporales
valores = [138.89, 139.39, 139.74, 139.69, 140.68, 141.17, 141.7, 141.9, 141.01, 140.47,
           1146.1, 1142.27, 1136.43, 1133.55, 1126.73, 1122.58, 1117.53, 1122.59, 1124.52,
           1116.3, 1115.47, 1112.34, 1102.18, 1095.61, 1082.56, 1080.49, 1081.34, 1080.52,
           1076.2, 1072.42, 1067.45, 1063.37, 1065.99, 1067.57, 1072.08, 1064.82, 1062.06,
           1067.53, 1074.87, 1073.81, 1076.02, 1080.65, 1082.09, 1078.17, 1077.78, 1075.37,
           1072.21, 1074.65, 1080.4, 1088.96, 1093.35, 1091, 1092.65, 1102.01, 1108.4,
           1104.75, 1101.11, 1099.53, 1102.4, 1093.46]

# Crear objeto Series
serie = pd.Series(valores)

# Gráfico de tendencia
plt.figure(figsize=(10, 5))
serie.plot(color='steelblue')
plt.title('Evolución Temporal del Dinero M1')
plt.grid(alpha=0.3)
plt.show()

# Transformación a estacionaria
diferencias = serie.diff().dropna()

# Análisis de autocorrelación
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 4))
plot_acf(diferencias, ax=ax1, lags=20)
plot_pacf(diferencias, ax=ax2, lags=20)
plt.tight_layout()
plt.show()

# Modelado predictivo
modelo = ARIMA(serie, order=(1,1,1)).fit()

# Resultados del modelo
print(modelo.summary())

# Evaluación de residuos
modelo.plot_diagnostics(figsize=(10, 8))
plt.tight_layout()
plt.show()

# Predicción futura
pronostico = modelo.forecast(12)
print("Valores proyectados para 12 periodos:\n", pronostico.round(2))